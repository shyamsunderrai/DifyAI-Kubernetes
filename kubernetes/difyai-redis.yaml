
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  namespace: difyai
spec:
  selector:
    matchLabels:
      app: redis
  serviceName: redis
  replicas: 1
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: 'docker.m.daocloud.io/redis:6-alpine'
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: difyai-config
          env:
            - name: REDISCLI_AUTH
              valueFrom:
                configMapKeyRef:
                  name: difyai-config
                  key: REDIS_PASSWORD
          ports:
            - name: redis-port
              protocol: TCP
              containerPort: 6379
          command: [ "redis-server", "--save", "20", "1", "--loglevel", "warning", "--requirepass", "$(REDIS_PASSWORD)" ]
          resources:
            limits:
              cpu: 100m
              memory: 300Mi
            requests:
              cpu: 100m
              memory: 100Mi
          livenessProbe:
            exec:
              command:
                - redis-cli
                - ping
          volumeMounts:
            - mountPath: /data
              name: redis-data
              subPath: dify/volumes/redis/data
      volumes:
        - name: redis-data
          persistentVolumeClaim:
            claimName: difyai-k8s


---



apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: difyai
spec:
  selector:
    app: redis
  type: NodePort
  ports:
  - name: redis-port
    protocol: TCP
    port: 6379
    targetPort: 6379


